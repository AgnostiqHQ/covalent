# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

name: release

on:
  workflow_dispatch:
    inputs:
      stable_version:
        description: "Stable version number, e.g. 0.32.3"
        type: string
      test_release:
        description: "Test the workflow but don't create the release. Uncheck this box to create a release."
        required: true
        type: boolean
        default: true
  workflow_call:
    inputs:
      prerelease:
        description: "true: Create a prerelease. false: Create a stable release"
        required: true
        type: boolean
        default: true

env:
  PAUL_BLART: >
    '['
    '"scottwn",'
    '"FyzHsn",'
    '"wjcunningham7",'
    '"santoshkumarradha"]'

jobs:
  github:
    runs-on: ubuntu-latest
    steps:
      - name: Check out release tag
        uses: actions/checkout@v2
        if: github.event.inputs.stable_version
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: "v${{ github.event.inputs.stable_version }}"
      - name: Check out master
        uses: actions/checkout@v2
        if: inputs.prerelease
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Read version
        run: |
          if [ -z ${{ inputs.prerelease }} ] && \
             [ -z ${{ github.event.inputs.stable_version }} ] ; then
            echo "You can't create a stable release without specifying the stable version number."
            exit 1
          fi
          VERSION="$(cat ./VERSION)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE=v$VERSION" >> $GITHUB_ENV
      - name: Tag commit
        if: inputs.prerelease
        id: push
        run: |
          git config user.name "CovalentOpsBot"
          git config user.email "covalentopsbot@users.noreply.github.com"
          git tag -a $RELEASE -m "Release $RELEASE"
          git remote set-url origin https://${{ secrets.COVALENT_OPS_BOT_TOKEN }}@github.com/AgnostiqHQ/covalent.git
          git push origin $RELEASE
      - name: Check conditions for stable release
        if: >
          github.event.inputs.stable_version
          && contains(env.PAUL_BLART, github.actor)
        id: no-push
        run: echo "Stable release for version ${{ github.event.inputs.stable_version }}"
      - name: Generate release message
        id: message
        run: |
          begin=$(grep -n "\b${VERSION}\b" ./CHANGELOG.md | cut -d ':' -f 1)
          previous_version=$(git describe --abbrev=0 $RELEASE^ | cut -c2-)
          end=$(tail -n +$((begin+1)) ./CHANGELOG.md | grep -n -m 1 "\b${previous_version}\b" | cut -d ':' -f 1)
          echo 'MESSAGE<<EOF' >> $GITHUB_ENV
          tail +$begin ./CHANGELOG.md | head -$end >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Create release
        if: >-
          ${{ (steps.push.outcome == 'success' || steps.no-push.outcome == 'success')
          && steps.message.outcome == 'success'
          && (!github.event.inputs.test_release || github.event.inputs.test_release == 'false') }}
        uses: ncipollo/release-action@v1
        with:
          body: ${{ env.MESSAGE }}
          token: ${{ secrets.COVALENT_OPS_BOT_TOKEN }}
          tag: ${{ env.RELEASE }}
          prerelease: ${{ inputs.prerelease }}
      - name: Alert Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: "The release.yml workflow is failing in ${{ github.ref }}!"
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ":warning:  Attention Required  :warning:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERT_WEBHOOK }}
  pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Check out release tag
        uses: actions/checkout@v2
        if: github.event.inputs.stable_version
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: "v${{ github.event.inputs.stable_version }}"
      - name: Check out master
        uses: actions/checkout@v2
        if: inputs.prerelease
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Build Webapp
        run: |
          cd ./covalent_ui/webapp
          yarn install
          yarn build
      - name: Build Prerelease Distribution
        if: inputs.prerelease
        id: pre-build
        run: python setup.py egg_info --tag-build=pre sdist
      - name: Build Stable Distribution
        if: >
          github.event.inputs.stable_version
          && contains(env.PAUL_BLART, github.actor)
        id: stable-build
        run: python setup.py sdist
      - name: Validate Distribution
        id: validate
        run: |
          VERSION="$(cat ./VERSION)"
          if [ -z ${{ inputs.prerelease }} ] && \
             [ -z ${{ github.event.inputs.stable_version }} ] ; then
            echo "You can't create a stable release without specifying the stable version number."
            exit 1
          fi
          if ${{ inputs.prerelease == true }} ; then
            VERSION="${VERSION}rc0"
          fi
          VERSION="$(echo $VERSION | sed 's/-/.post/')"
          cd dist
          tar xzf covalent-${VERSION}.tar.gz
          diff -x .gitignore -r covalent-${VERSION}/covalent ../covalent
          diff -x .gitignore -r covalent-${VERSION}/covalent_dispatcher ../covalent_dispatcher
          diff -x README.md -r covalent-${VERSION}/covalent_migrations ../covalent_migrations
          diff -x .gitignore -x README.md -x webapp covalent-${VERSION}/covalent_ui ../covalent_ui
          diff -r covalent-${VERSION}/covalent_ui/webapp/build ../covalent_ui/webapp/build
          rm -rf covalent-${VERSION}/
      - name: Upload Distribution
        if: >
          steps.pre-build.outcome == 'success'
          || steps.stable-build.outcome == 'success'
          && steps.validate.outcome == 'success'
          && ${{ !github.event.inputs.test_release }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
      - name: Alert Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: "The release.yml workflow is failing in ${{ github.ref }}!"
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ":warning:  Attention Required  :warning:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERT_WEBHOOK }}
  conda:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: "buildenv"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
      - name: Check out release tag
        uses: actions/checkout@v2
        if: github.event.inputs.stable_version
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: "v${{ github.event.inputs.stable_version }}"
      - name: Check out master
        uses: actions/checkout@v2
        if: inputs.prerelease
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install Conda dependencies
        run: |
          conda install conda-build conda-verify anaconda-client
      - name: Build package
        run: |
          mkdir covalent-channel
          conda build --output-folder ./covalent-channel/ --python ${{ matrix.python-version }} .
      - name: Convert package
        run: |
          conda convert --platform all ./covalent-channel/linux-64/*.tar.bz2
          conda search -c ./covalent-channel/ --override-channels
          conda index ./covalent-channel/
          conda config --show channels
      - name: Upload pre-release
        if: inputs.prerelease
        run: anaconda upload -t ${{ secrets.ANACONDA_TOKEN }} upload -u agnostiq -l beta --skip-existing ./covalent-channel/{linux,osx,win}-*/*.tar.bz2
      - name: Upload stable release
        if: >
          github.event.inputs.stable_version \
          && ${{ !github.event.inputs.test_release }} \
          && ${{ contains(env.PAUL_BLART, github.actor) }}
        run: anaconda upload -t ${{ secrets.ANACONDA_TOKEN }} upload -u agnostiq ./covalent-channel/{linux,osx,win}-*/*.tar.bz2
      - name: Alert Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: "The release.yml workflow is failing in ${{ github.ref }}!"
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ":warning:  Attention Required  :warning:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERT_WEBHOOK }}
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out release tag
        uses: actions/checkout@v2
        if: github.event.inputs.stable_version
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: "v${{ github.event.inputs.stable_version }}"
      - name: Check out master
        uses: actions/checkout@v2
        if: inputs.prerelease
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Generate tag
        run: |
          aws --version
          docker info
          TAG="$(cat ./VERSION)"
          if aws ecr describe-images \
            --repository-name covalent
            --image-ids imageTag=$TAG &>/dev/null ; then
            SHORT_SHA="${GITHUB_SHA::8}"
            TAG=$TAG-$SHORT_SHA
          fi
          echo "TAG: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Build and push image
        id: docker-build-push
        if: >
          inputs.prerelease
          && ${{ !github.events.inputs.stable_version }}
        run: |
          docker build -t covalent .
          docker tag covalent:latest public.ecr.aws/covalent/covalent:latest
          docker tag covalent:latest public.ecr.aws/covalent/covalent:$TAG
          if [ "${{ github.events.inputs.test_release }}" == false ] ; then
            docker push -a public.ecr.aws/covalent/covalent
          fi
      - name: Update stable tag
        if: >
          github.event.inputs.stable_version
          && !inputs.prerelease
          && steps.docker-build-push.outcome == 'success'
          && ${{ !github.event.inputs.test_release }}
          && contains(env.PAUL_BLART, github.actor)
        run: |
          docker build -t covalent .
          docker tag covalent:$TAG public.ecr.aws/covalent/covalent:stable
          docker push public.ecr.aws/covalent/covalent:stable
