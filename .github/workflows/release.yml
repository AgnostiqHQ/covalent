# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

name: release

on:
  pull_request:
  workflow_dispatch:
    inputs:
      stable_version:
        description: "Stable version number, e.g. 0.32.3"
        type: string
      test_release:
        description: "Test the workflow but don't create the release. Uncheck this box to create a release."
        required: true
        type: boolean
        default: true
  workflow_call:
    inputs:
      prerelease:
        description: "true: Create a prerelease. false: Create a stable release"
        required: true
        type: boolean
        default: true
      prerelease_version:
        description: "The prerelease version to release"
        required: false
        type: string
        default: "master"

env:
  PAUL_BLART: >
    '['
    '"AlejandroEsquivel",'
    '"FyzHsn",'
    '"wjcunningham7",'
    '"santoshkumarradha"]'
  EXECUTOR_BASE_DOCKERFILE_URL: "https://raw.githubusercontent.com/AgnostiqHQ/covalent-aws-plugins/develop/Dockerfile?token=${{ secrets.COVALENT_OPS_BOT_TOKEN }}"
  AWS_PLUGINS_VERSION_URL: "https://raw.githubusercontent.com/AgnostiqHQ/covalent-aws-plugins/develop/VERSION?token=${{ secrets.COVALENT_OPS_BOT_TOKEN }}"

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out master
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: "linux/amd64,linux/arm64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ECR_PUBLIC_UPLOAD_ROLE }}
          aws-region: us-east-1

      - name: Generate metadata
        run: |
          aws --version
          docker info
          TAG="$(cat ./VERSION)"
          echo "TAG: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
          BUILD_DATE=`date -u +%Y-%m-%d`
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          BUILD_VERSION=${{ github.sha }}
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV

      - name: Login to Public Registry
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push pre-release
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_VERSION=${{ env.BUILD_VERSION }}
          push: false
          tags: |
            public.ecr.aws/covalent/covalent:latest
            public.ecr.aws/covalent/covalent:${{ env.TAG }}

  # docker_aws_plugins:
  #   name: Trigger AWS Plugins Base Executor Image Pre-Release
  #   needs: pypi
  #   if: >
  #     inputs.prerelease
  #     && !inputs.stable_version
  #     && github.event_name == 'schedule'
  #   uses: AgnostiqHQ/covalent-aws-plugins/.github/workflows/docker.yml@develop
  #   with:
  #     prerelease: true

  # docker_aws_lambda:
  #   name: Trigger AWS Lambda Base Executor Image Pre-Release
  #   needs: pypi
  #   if: >
  #     inputs.prerelease
  #     && !inputs.stable_version
  #     && github.event_name == 'schedule'
  #   uses: AgnostiqHQ/covalent-awslambda-plugin/.github/workflows/docker.yml@develop
  #   with:
  #     prerelease: true

  # docker_aws_braket:
  #   name: Trigger AWS Braket Base Executor Image Pre-Release
  #   needs: pypi
  #   if: >
  #     inputs.prerelease
  #     && !inputs.stable_version
  #     && github.event_name == 'schedule'
  #   uses: AgnostiqHQ/covalent-braket-plugin/.github/workflows/docker.yml@develop
  #   with:
  #     prerelease: true
