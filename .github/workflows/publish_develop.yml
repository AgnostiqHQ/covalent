# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

name: publish-dev

on:
  push:
    branches:
      - develop
    paths-ignore:
      - "CHANGELOG.md"
      - "VERSION"

jobs:
  publish_develop:
    runs-on: ubuntu-latest
    steps:
      - name: Check out head
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Generate tag
        run: |
          aws --version
          docker info
          docker --version
          TAG="$(cat ./VERSION)"
          if aws ecr describe-images \
            --repository-name covalent \
            --image-ids imageTag=$TAG &> /dev/null ; then
            SHORT_SHA="${GITHUB_SHA::8}"
            TAG=$TAG-$SHORT_SHA
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Build and push covalent image
        run: |
          docker build -t ${{ secrets.AWS_ECR_DEV_REPO }} .
          docker run -d -p 48008:8080 ${{ secrets.AWS_ECR_DEV_REPO }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo 'Running an example dispatch...'
          for idx in {0..1..1}; do
            echo 'Dispatch number: '$idx
            python tests/example_dispatch.py
          done
          docker push ${{ secrets.AWS_ECR_DEV_REPO }}
          docker tag ${{ secrets.AWS_ECR_DEV_REPO }} ${{ secrets.AWS_ECR_DEV_REPO }}:$TAG
          docker push ${{ secrets.AWS_ECR_DEV_REPO }}:$TAG
      - name: Push to ECR
        run: |
          docker-compose -f docker-compose.dev.yml up --build -d
          echo 'Displaying containers...'
          docker ps
          docker tag covalent-data:latest ${{ secrets.DATA_DEV_REPO }}
          docker tag covalent-dispatcher:latest ${{ secrets.DISPATCHER_DEV_REPO }}
          docker tag covalent-queuer:latest ${{ secrets.QUEUER_DEV_REPO }}
          docker tag covalent-results:latest ${{ secrets.RESULTS_DEV_REPO }}
          docker tag covalent-runner:latest ${{ secrets.RUNNER_DEV_REPO }}
          docker tag covalent-ui:latest ${{ secrets.UI_DEV_REPO }}
          docker push ${{ secrets.DATA_DEV_REPO }}
          docker push ${{ secrets.DISPATCHER_DEV_REPO }}
          docker push ${{ secrets.QUEUER_DEV_REPO }}
          docker push ${{ secrets.RESULTS_DEV_REPO }}
          docker push ${{ secrets.RUNNER_DEV_REPO }}
          docker push ${{ secrets.UI_DEV_REPO }}
      - name: Alert Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: "The publish-dev.yml workflow is failing in develop!"
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ":warning:  Attention Required  :warning:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERT_WEBHOOK }}
