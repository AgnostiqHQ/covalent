# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

name: tests

on:
  pull_request:
  workflow_run:
    workflows: [changelog]
    types: [completed]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        container:
          - python:3.8-buster
          - python:3.8-bullseye
          - python:3.9-buster
          - python:3.9-bullseye
          - python:3.10-buster
          - python:3.10-bullseye
          - image: "centos/python-38-centos7"
            options: "--user root"
        experimental: [false]
        include:
          - os: macos-latest
            python-version: "3.8"
            experimental: false
          - os: macos-latest
            python-version: "3.9"
            experimental: false
          - os: macos-latest
            python-version: "3.10"
            experimental: false
    container: ${{ matrix.container }}
    continue-on-error: ${{ matrix.experimental }}
    outputs:
      release: ${{ steps.push.outputs.release }}
    steps:
      - name: Check out head
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: working-directory
        with:
          filters: |
            sdk:
            - 'covalent/**'
            dispatcher:
            - 'covalent_dispatcher/**'
            ui_backend:
            - 'covalent_ui/*.py'
            ui_backend_tests:
            - 'tests/covalent_ui_tests/**'
            ui_frontend:
            - 'covalent_ui/webapp/**'
            
      - name: Set up Python
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          pip install --no-cache-dir -r ./requirements.txt
          pip install --no-cache-dir -r ./tests/requirements.txt

      - name: Install rsync on Ubuntu
        if: >
          matrix.container == 'python:3.8-buster'
          || matrix.container == 'python:3.8-bullseye'
          || matrix.container == 'python:3.9-buster'
          || matrix.container == 'python:3.9-bullseye'
          || matrix.container == 'python:3.10-buster'
          || matrix.container == 'python:3.10-bullseye'
        run: apt-get update && apt-get install -y rsync

      - name: Install NPM and Yarn on Ubuntu
        if: >
          (github.event_name != 'pull_request'
          || steps.working-directory.outputs.ui_frontend == 'true')
          && (matrix.container == 'python:3.8-buster'
          || matrix.container == 'python:3.8-bullseye'
          || matrix.container == 'python:3.9-buster'
          || matrix.container == 'python:3.9-bullseye'
          || matrix.container == 'python:3.10-buster'
          || matrix.container == 'python:3.10-bullseye')
        run: |
          apt-get install -y curl
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
          apt-get install -y nodejs
          npm install -g yarn

      - name: Install NPM and Yarn on CentOS
        if: >
          (github.event_name != 'pull_request'
          || steps.working-directory.outputs.ui_frontend == 'true')
           && matrix.container.image == 'centos/python-38-centos7'
        run: |
          yum remove -y npm nodejs
          curl -fsSL https://rpm.nodesource.com/setup_16.x | bash -
          yum install -y npm nodejs
          npm install -g yarn

      - name: Build webapp
        if: >
          github.event_name != 'pull_request'
          || steps.working-directory.outputs.ui_frontend == 'true'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 2
          command: |
            cd ./covalent_ui/webapp
            yarn install
            yarn build

      - name: Build distribution
        if: github.event_name != 'pull_request'
        run: python setup.py sdist

      - name: Validate distribution
        if: github.event_name != 'pull_request'
        run: |
          VERSION="$(cat ./VERSION)"
          cd dist
          tar xzf covalent-${VERSION}.tar.gz
          diff -x .gitignore -r covalent-${VERSION}/covalent ../covalent
          diff -x .gitignore -r covalent-${VERSION}/covalent_dispatcher ../covalent_dispatcher
          diff -x README.md -r covalent-${VERSION}/covalent_migrations ../covalent_migrations
          diff -x .gitignore -x README.md -x webapp covalent-${VERSION}/covalent_ui ../covalent_ui
          diff -r covalent-${VERSION}/covalent_ui/webapp/build ../covalent_ui/webapp/build
          rm -rf covalent-${VERSION}/

      - name: Install Covalent
        run: pip install -e .

      - name: Start Covalent dispatcher server
        run: covalent start --ignore-migrations
               
      - name: Run SDK tests and measure coverage
        if: >
          github.event_name != 'pull_request'
          || steps.working-directory.outputs.sdk == 'true'
        run: PYTHONPATH=$PWD/ pytest -vv --reruns=5 tests/covalent_tests --cov=covalent --cov-config=.coveragerc
            
      - name: Generate SDK coverage report
        if: >
          github.event_name != 'pull_request'
          || steps.working-directory.outputs.sdk == 'true'
        run: coverage xml -o sdk_coverage.xml

      - name: Run dispatcher tests and measure coverage
        if: >
          github.event_name != 'pull_request'
          || steps.working-directory.outputs.dispatcher == 'true'
        run: PYTHONPATH=$PWD/ pytest -vv --reruns=5 tests/covalent_dispatcher_tests --cov=covalent_dispatcher --cov-config=.coveragerc
      
      - name: Generate dispatcher coverage report
        if: >
          github.event_name != 'pull_request'
          || steps.working-directory.outputs.dispatcher == 'true'
        run: coverage xml -o dispatcher_coverage.xml

      - name: Run functional tests and measure coverage
        run: PYTHONPATH=$PWD/ pytest -vv --reruns=5 tests/functional_tests  --cov=covalent --cov=covalent_dispatcher --cov-config=.coveragerc
      
      - name: Generate functional test coverage report
        run: coverage xml -o functional_tests_coverage.xml

      - name: Run UI backend tests and measure coverage
        id: ui_tests
        if: >
          false
          && (github.event_name != 'pull_request'
          || steps.working-directory.outputs.ui_backend == 'true')
        run: PYTHONPATH=$PWD/ pytest -vv --reruns=5 tests/covalent_ui_tests --cov=covalent_ui --cov-config=.coveragerc
      
      - name: Generate UI backend coverage report
        continue-on-error: true
        if: > 
          false
          && (github.event_name != 'pull_request'
          || (steps.working-directory.outputs.ui_backend_tests == 'true'
              && steps.working-directory.outputs.ui_backend == 'true'
              && steps.ui_tests.outputs.exit_code == 0))
        run: coverage xml -o ui_backend_coverage.xml

      - name: Upload SDK report to Codecov
        if: >
          matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
          && (github.event_name != 'pull_request'
              || steps.working-directory.outputs.sdk == 'true')
        uses: codecov/codecov-action@v3
        with:
          files: ./sdk_coverage.xml
          flags: SDK
          name: "SDK Unit Tests"

      - name: Upload Dispatcher report to Codecov
        if: >
          matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
          && (github.event_name != 'pull_request'
              || steps.working-directory.outputs.dispatcher == 'true')
        uses: codecov/codecov-action@v3
        with:
          files: ./dispatcher_coverage.xml
          flags: Dispatcher
          name: "Dispatcher Unit Tests"

      - name: Upload Functional report to Codecov
        if: >
          matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
        uses: codecov/codecov-action@v3
        with:
          files: ./functional_tests_coverage.xml
          flags: Functional_Tests
          name: "Functional Tests"

      - name: Upload UI backend report to Codecov
        if: >
          false
          && matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
          && (github.event_name != 'pull_request'
              || (steps.working-directory.outputs.ui_backend == 'true'
                  && steps.ui_tests.outputs.exit_code == 0))
        uses: codecov/codecov-action@v3
        with:
          files: ./ui_backend_coverage.xml
          flags: UI_Backend
          name: "UI Backend Unit Tests"

      - name: Get latest release
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: >
          github.ref == 'refs/heads/develop'
          && matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
        with:
          semver_only: true

      - name: Push to master
        id: push
        if: >
          github.ref == 'refs/heads/develop'
          && matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
        run: |
          MASTER_VERSION="$(echo ${{ steps.get-latest-tag.outputs.tag }} | cut -c2- )"
          VERSION="$(cat ./VERSION)"
          release=false
          if [ "$MASTER_VERSION" = "$VERSION" ] ; then
            echo "$VERSION has been previously released."
          elif dpkg --compare-versions $VERSION 'gt' '0.71.0' ; then
            git config user.name "CovalentOpsBot"
            git config user.email "covalentopsbot@users.noreply.github.com"
            git remote set-url origin https://${{ secrets.COVALENT_OPS_BOT_TOKEN }}@github.com/AgnostiqHQ/covalent.git
            git push origin HEAD:master
            release=true
          else
            echo "We cannot release versions less than 0.71.0."
          fi
          echo "RELEASE=$release" >> $GITHUB_ENV
          echo "::set-output name=release::$release"

      - name: Format Slack message
        if: >
          github.ref == 'refs/heads/develop'
          && matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
        run: |
          VERSION="$(cat ./VERSION)"
          SLACK_MSG=":rocket: Version $VERSION is now available."
          echo "SLACK_MSG=$SLACK_MSG" >> $GITHUB_ENV

      - name: Notify Slack
        if: >
          github.ref == 'refs/heads/develop'
          && matrix.os == 'ubuntu-latest'
          && matrix.container == 'python:3.8-buster'
          && env.RELEASE == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent-ci"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: ${{ env.SLACK_MSG }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Alert Slack
        if: >
          github.ref == 'ref/heads/develop'
          && failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "covalent"
          SLACK_USERNAME: "CovalentOpsBot"
          SLACK_MESSAGE: "The tests.yml workflow is failing in develop!"
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ":warning:  Attention Required  :warning:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERT_WEBHOOK }}

  release:
    needs: tests
    if: github.ref == 'refs/heads/develop' && needs.tests.outputs.release == 'true'
    uses: AgnostiqHQ/covalent/.github/workflows/release.yml@develop
    secrets: inherit
    with:
      prerelease: true
