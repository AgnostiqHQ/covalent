{"version":3,"file":"index.js","sources":["../dist-src/generated/endpoints.js","../dist-src/version.js","../dist-src/endpoints-to-methods.js","../dist-src/index.js"],"sourcesContent":["const Endpoints = {\n    actions: {\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        approveWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\",\n        ],\n        cancelWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n        ],\n        createOrUpdateEnvironmentSecret: [\n            \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        createRegistrationTokenForOrg: [\n            \"POST /orgs/{org}/actions/runners/registration-token\",\n        ],\n        createRegistrationTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n        ],\n        createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n        createRemoveTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n        ],\n        createWorkflowDispatch: [\n            \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n        ],\n        deleteArtifact: [\n            \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n        ],\n        deleteEnvironmentSecret: [\n            \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        deleteSelfHostedRunnerFromOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n        ],\n        deleteSelfHostedRunnerFromRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        deleteWorkflowRunLogs: [\n            \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        disableSelectedRepositoryGithubActionsOrganization: [\n            \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        disableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n        ],\n        downloadArtifact: [\n            \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n        ],\n        downloadJobLogsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n        ],\n        downloadWorkflowRunAttemptLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\",\n        ],\n        downloadWorkflowRunLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        enableSelectedRepositoryGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        enableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n        ],\n        getAllowedActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        getAllowedActionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n        getEnvironmentPublicKey: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\",\n        ],\n        getEnvironmentSecret: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        getGithubActionsPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions\",\n        ],\n        getGithubActionsPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n        getPendingDeploymentsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        getRepoPermissions: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n            {},\n            { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n        ],\n        getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n        getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n        getReviewsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n        ],\n        getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n        getSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n        getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        getWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\",\n        ],\n        getWorkflowRunUsage: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n        ],\n        getWorkflowUsage: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n        ],\n        listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n        listEnvironmentSecrets: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n        ],\n        listJobsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n        ],\n        listJobsForWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n        ],\n        listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n        listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n        listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n        listRunnerApplicationsForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n        ],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        listSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/repositories\",\n        ],\n        listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n        listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n        listWorkflowRunArtifacts: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n        ],\n        listWorkflowRuns: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n        ],\n        listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        reviewPendingDeploymentsForRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        setAllowedActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        setAllowedActionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions\",\n        ],\n        setGithubActionsPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories\",\n        ],\n    },\n    activity: {\n        checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n        deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n        deleteThreadSubscription: [\n            \"DELETE /notifications/threads/{thread_id}/subscription\",\n        ],\n        getFeeds: [\"GET /feeds\"],\n        getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n        getThread: [\"GET /notifications/threads/{thread_id}\"],\n        getThreadSubscriptionForAuthenticatedUser: [\n            \"GET /notifications/threads/{thread_id}/subscription\",\n        ],\n        listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n        listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n        listOrgEventsForAuthenticatedUser: [\n            \"GET /users/{username}/events/orgs/{org}\",\n        ],\n        listPublicEvents: [\"GET /events\"],\n        listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n        listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n        listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n        listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n        listReceivedPublicEventsForUser: [\n            \"GET /users/{username}/received_events/public\",\n        ],\n        listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n        listRepoNotificationsForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/notifications\",\n        ],\n        listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n        listReposStarredByUser: [\"GET /users/{username}/starred\"],\n        listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n        listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n        listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n        listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n        markNotificationsAsRead: [\"PUT /notifications\"],\n        markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n        markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n        setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n        setThreadSubscription: [\n            \"PUT /notifications/threads/{thread_id}/subscription\",\n        ],\n        starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n        unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n    },\n    apps: {\n        addRepoToInstallation: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] },\n        ],\n        addRepoToInstallationForAuthenticatedUser: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        checkToken: [\"POST /applications/{client_id}/token\"],\n        createContentAttachment: [\n            \"POST /content_references/{content_reference_id}/attachments\",\n            { mediaType: { previews: [\"corsair\"] } },\n        ],\n        createContentAttachmentForRepo: [\n            \"POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments\",\n            { mediaType: { previews: [\"corsair\"] } },\n        ],\n        createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n        createInstallationAccessToken: [\n            \"POST /app/installations/{installation_id}/access_tokens\",\n        ],\n        deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n        deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n        deleteToken: [\"DELETE /applications/{client_id}/token\"],\n        getAuthenticated: [\"GET /app\"],\n        getBySlug: [\"GET /apps/{app_slug}\"],\n        getInstallation: [\"GET /app/installations/{installation_id}\"],\n        getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n        getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n        getSubscriptionPlanForAccount: [\n            \"GET /marketplace_listing/accounts/{account_id}\",\n        ],\n        getSubscriptionPlanForAccountStubbed: [\n            \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n        ],\n        getUserInstallation: [\"GET /users/{username}/installation\"],\n        getWebhookConfigForApp: [\"GET /app/hook/config\"],\n        getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n        listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n        listAccountsForPlanStubbed: [\n            \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n        ],\n        listInstallationReposForAuthenticatedUser: [\n            \"GET /user/installations/{installation_id}/repositories\",\n        ],\n        listInstallations: [\"GET /app/installations\"],\n        listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n        listPlans: [\"GET /marketplace_listing/plans\"],\n        listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n        listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n        listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n        listSubscriptionsForAuthenticatedUserStubbed: [\n            \"GET /user/marketplace_purchases/stubbed\",\n        ],\n        listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n        redeliverWebhookDelivery: [\n            \"POST /app/hook/deliveries/{delivery_id}/attempts\",\n        ],\n        removeRepoFromInstallation: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] },\n        ],\n        removeRepoFromInstallationForAuthenticatedUser: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        resetToken: [\"PATCH /applications/{client_id}/token\"],\n        revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n        scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n        suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n        unsuspendInstallation: [\n            \"DELETE /app/installations/{installation_id}/suspended\",\n        ],\n        updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n    },\n    billing: {\n        getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n        getGithubActionsBillingUser: [\n            \"GET /users/{username}/settings/billing/actions\",\n        ],\n        getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n        getGithubPackagesBillingUser: [\n            \"GET /users/{username}/settings/billing/packages\",\n        ],\n        getSharedStorageBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/shared-storage\",\n        ],\n        getSharedStorageBillingUser: [\n            \"GET /users/{username}/settings/billing/shared-storage\",\n        ],\n    },\n    checks: {\n        create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n        createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n        get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n        getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n        listAnnotations: [\n            \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n        ],\n        listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n        listForSuite: [\n            \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n        ],\n        listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n        rerequestRun: [\n            \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\",\n        ],\n        rerequestSuite: [\n            \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n        ],\n        setSuitesPreferences: [\n            \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    },\n    codeScanning: {\n        deleteAnalysis: [\n            \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n        ],\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n            {},\n            { renamedParameters: { alert_id: \"alert_number\" } },\n        ],\n        getAnalysis: [\n            \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n        ],\n        getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n        listAlertInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n        ],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n        listAlertsInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n            {},\n            { renamed: [\"codeScanning\", \"listAlertInstances\"] },\n        ],\n        listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n        ],\n        uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n    },\n    codesOfConduct: {\n        getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n        getConductCode: [\"GET /codes_of_conduct/{key}\"],\n    },\n    emojis: { get: [\"GET /emojis\"] },\n    enterpriseAdmin: {\n        disableSelectedOrganizationGithubActionsEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        enableSelectedOrganizationGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        getAllowedActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        getGithubActionsPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions\",\n        ],\n        listSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n        setAllowedActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions\",\n        ],\n        setSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n    },\n    gists: {\n        checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n        create: [\"POST /gists\"],\n        createComment: [\"POST /gists/{gist_id}/comments\"],\n        delete: [\"DELETE /gists/{gist_id}\"],\n        deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n        fork: [\"POST /gists/{gist_id}/forks\"],\n        get: [\"GET /gists/{gist_id}\"],\n        getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n        getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n        list: [\"GET /gists\"],\n        listComments: [\"GET /gists/{gist_id}/comments\"],\n        listCommits: [\"GET /gists/{gist_id}/commits\"],\n        listForUser: [\"GET /users/{username}/gists\"],\n        listForks: [\"GET /gists/{gist_id}/forks\"],\n        listPublic: [\"GET /gists/public\"],\n        listStarred: [\"GET /gists/starred\"],\n        star: [\"PUT /gists/{gist_id}/star\"],\n        unstar: [\"DELETE /gists/{gist_id}/star\"],\n        update: [\"PATCH /gists/{gist_id}\"],\n        updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n    },\n    git: {\n        createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n        createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n        createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n        createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n        createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n        deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n        getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n        getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n        getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n        getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n        listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n        updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n    },\n    gitignore: {\n        getAllTemplates: [\"GET /gitignore/templates\"],\n        getTemplate: [\"GET /gitignore/templates/{name}\"],\n    },\n    interactions: {\n        getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n        getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n        getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n        getRestrictionsForYourPublicRepos: [\n            \"GET /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n        ],\n        removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n        removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n        removeRestrictionsForRepo: [\n            \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n        ],\n        removeRestrictionsForYourPublicRepos: [\n            \"DELETE /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n        ],\n        setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n        setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n        setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n        setRestrictionsForYourPublicRepos: [\n            \"PUT /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n        ],\n    },\n    issues: {\n        addAssignees: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n        create: [\"POST /repos/{owner}/{repo}/issues\"],\n        createComment: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n        ],\n        createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n        createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n        deleteComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n        ],\n        deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n        deleteMilestone: [\n            \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n        getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n        getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n        getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n        list: [\"GET /issues\"],\n        listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n        listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n        listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n        listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n        listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n        listEventsForTimeline: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/issues\"],\n        listForOrg: [\"GET /orgs/{org}/issues\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n        listLabelsForMilestone: [\n            \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n        ],\n        listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n        listLabelsOnIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n        lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        removeAllLabels: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        removeAssignees: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        removeLabel: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n        ],\n        setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n        updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n        updateMilestone: [\n            \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n    },\n    licenses: {\n        get: [\"GET /licenses/{license}\"],\n        getAllCommonlyUsed: [\"GET /licenses\"],\n        getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n    },\n    markdown: {\n        render: [\"POST /markdown\"],\n        renderRaw: [\n            \"POST /markdown/raw\",\n            { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n        ],\n    },\n    meta: {\n        get: [\"GET /meta\"],\n        getOctocat: [\"GET /octocat\"],\n        getZen: [\"GET /zen\"],\n        root: [\"GET /\"],\n    },\n    migrations: {\n        cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n        deleteArchiveForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/archive\",\n        ],\n        deleteArchiveForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        downloadArchiveForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        getArchiveForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/archive\",\n        ],\n        getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n        getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n        getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n        getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n        getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n        listForAuthenticatedUser: [\"GET /user/migrations\"],\n        listForOrg: [\"GET /orgs/{org}/migrations\"],\n        listReposForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n        ],\n        listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n        listReposForUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n            {},\n            { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] },\n        ],\n        mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n        setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n        startForAuthenticatedUser: [\"POST /user/migrations\"],\n        startForOrg: [\"POST /orgs/{org}/migrations\"],\n        startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n        unlockRepoForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        unlockRepoForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        updateImport: [\"PATCH /repos/{owner}/{repo}/import\"],\n    },\n    orgs: {\n        blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n        cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n        checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n        checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n        checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n        convertMemberToOutsideCollaborator: [\n            \"PUT /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        createInvitation: [\"POST /orgs/{org}/invitations\"],\n        createWebhook: [\"POST /orgs/{org}/hooks\"],\n        deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n        get: [\"GET /orgs/{org}\"],\n        getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n        getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n        getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n        getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n        getWebhookDelivery: [\n            \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        list: [\"GET /organizations\"],\n        listAppInstallations: [\"GET /orgs/{org}/installations\"],\n        listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n        listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n        listForAuthenticatedUser: [\"GET /user/orgs\"],\n        listForUser: [\"GET /users/{username}/orgs\"],\n        listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n        listMembers: [\"GET /orgs/{org}/members\"],\n        listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n        listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n        listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n        listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n        listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n        listWebhooks: [\"GET /orgs/{org}/hooks\"],\n        pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n        removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n        removeOutsideCollaborator: [\n            \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        removePublicMembershipForAuthenticatedUser: [\n            \"DELETE /orgs/{org}/public_members/{username}\",\n        ],\n        setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n        setPublicMembershipForAuthenticatedUser: [\n            \"PUT /orgs/{org}/public_members/{username}\",\n        ],\n        unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n        update: [\"PATCH /orgs/{org}\"],\n        updateMembershipForAuthenticatedUser: [\n            \"PATCH /user/memberships/orgs/{org}\",\n        ],\n        updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n        updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n    },\n    packages: {\n        deletePackageForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageVersionForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByAnOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n            {},\n            { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] },\n        ],\n        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n            {},\n            {\n                renamed: [\n                    \"packages\",\n                    \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\",\n                ],\n            },\n        ],\n        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getPackageForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageVersionForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n        listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n        listPackagesForUser: [\"GET /users/{username}/packages\"],\n        restorePackageForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageVersionForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n    },\n    projects: {\n        addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n        createCard: [\"POST /projects/columns/{column_id}/cards\"],\n        createColumn: [\"POST /projects/{project_id}/columns\"],\n        createForAuthenticatedUser: [\"POST /user/projects\"],\n        createForOrg: [\"POST /orgs/{org}/projects\"],\n        createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n        delete: [\"DELETE /projects/{project_id}\"],\n        deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n        deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n        get: [\"GET /projects/{project_id}\"],\n        getCard: [\"GET /projects/columns/cards/{card_id}\"],\n        getColumn: [\"GET /projects/columns/{column_id}\"],\n        getPermissionForUser: [\n            \"GET /projects/{project_id}/collaborators/{username}/permission\",\n        ],\n        listCards: [\"GET /projects/columns/{column_id}/cards\"],\n        listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n        listColumns: [\"GET /projects/{project_id}/columns\"],\n        listForOrg: [\"GET /orgs/{org}/projects\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n        listForUser: [\"GET /users/{username}/projects\"],\n        moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n        moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n        removeCollaborator: [\n            \"DELETE /projects/{project_id}/collaborators/{username}\",\n        ],\n        update: [\"PATCH /projects/{project_id}\"],\n        updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n        updateColumn: [\"PATCH /projects/columns/{column_id}\"],\n    },\n    pulls: {\n        checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        create: [\"POST /repos/{owner}/{repo}/pulls\"],\n        createReplyForReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n        ],\n        createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        createReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        deletePendingReview: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        deleteReviewComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n        dismissReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        getReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n        list: [\"GET /repos/{owner}/{repo}/pulls\"],\n        listCommentsForReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n        listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n        listRequestedReviewers: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        listReviewComments: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n        listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        removeRequestedReviewers: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        requestReviewers: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        submitReview: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        updateBranch: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n        ],\n        updateReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        updateReviewComment: [\n            \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n    },\n    rateLimit: { get: [\"GET /rate_limit\"] },\n    reactions: {\n        createForCommitComment: [\n            \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        createForIssue: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n        ],\n        createForIssueComment: [\n            \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        createForPullRequestReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        createForRelease: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        createForTeamDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        createForTeamDiscussionInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n        deleteForCommitComment: [\n            \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForIssue: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n        ],\n        deleteForIssueComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForPullRequestComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussion: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussionComment: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n        ],\n        listForCommitComment: [\n            \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n        listForIssueComment: [\n            \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        listForPullRequestReviewComment: [\n            \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        listForTeamDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        listForTeamDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n    },\n    repos: {\n        acceptInvitation: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] },\n        ],\n        acceptInvitationForAuthenticatedUser: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n        ],\n        addAppAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n        addStatusCheckContexts: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        addTeamAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        addUserAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n        checkVulnerabilityAlerts: [\n            \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n        compareCommitsWithBasehead: [\n            \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n        ],\n        createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n        createCommitComment: [\n            \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        createCommitSignatureProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n        createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n        createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n        createDeploymentStatus: [\n            \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n        createForAuthenticatedUser: [\"POST /user/repos\"],\n        createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n        createInOrg: [\"POST /orgs/{org}/repos\"],\n        createOrUpdateEnvironment: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n        createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n        createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n        createUsingTemplate: [\n            \"POST /repos/{template_owner}/{template_repo}/generate\",\n        ],\n        createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n        declineInvitation: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] },\n        ],\n        declineInvitationForAuthenticatedUser: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n        ],\n        delete: [\"DELETE /repos/{owner}/{repo}\"],\n        deleteAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        deleteAdminBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        deleteAnEnvironment: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        deleteBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n        deleteCommitSignatureProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n        deleteDeployment: [\n            \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n        ],\n        deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n        deleteInvitation: [\n            \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n        deletePullRequestReviewProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n        deleteReleaseAsset: [\n            \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        disableAutomatedSecurityFixes: [\n            \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        disableLfsForRepo: [\"DELETE /repos/{owner}/{repo}/lfs\"],\n        disableVulnerabilityAlerts: [\n            \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        downloadArchive: [\n            \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n            {},\n            { renamed: [\"repos\", \"downloadZipballArchive\"] },\n        ],\n        downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n        downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n        enableAutomatedSecurityFixes: [\n            \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        enableLfsForRepo: [\"PUT /repos/{owner}/{repo}/lfs\"],\n        enableVulnerabilityAlerts: [\n            \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        generateReleaseNotes: [\n            \"POST /repos/{owner}/{repo}/releases/generate-notes\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}\"],\n        getAccessRestrictions: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        getAdminBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n        getAllStatusCheckContexts: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n        ],\n        getAllTopics: [\n            \"GET /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        getAppsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n        ],\n        getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n        getBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n        getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n        getCollaboratorPermissionLevel: [\n            \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n        ],\n        getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n        getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n        getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n        getCommitSignatureProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n        getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n        getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n        getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n        getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n        getDeploymentStatus: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n        ],\n        getEnvironment: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n        getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n        getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n        getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n        getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n        getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n        getPullRequestReviewProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n        getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n        getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n        getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n        getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n        getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n        getStatusChecksProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        getTeamsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n        ],\n        getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n        getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n        getUsersWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n        ],\n        getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n        getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        getWebhookConfigForRepo: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        getWebhookDelivery: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n        listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n        listBranchesForHeadCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n        ],\n        listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n        listCommentsForCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n        listCommitStatusesForRef: [\n            \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n        listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n        listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n        listDeploymentStatuses: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n        listForAuthenticatedUser: [\"GET /user/repos\"],\n        listForOrg: [\"GET /orgs/{org}/repos\"],\n        listForUser: [\"GET /users/{username}/repos\"],\n        listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n        listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n        listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n        listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n        listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n        listPublic: [\"GET /repositories\"],\n        listPullRequestsAssociatedWithCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n        ],\n        listReleaseAssets: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n        ],\n        listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n        listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n        listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n        listWebhookDeliveries: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n        ],\n        listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n        merge: [\"POST /repos/{owner}/{repo}/merges\"],\n        mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n        pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeAppAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        removeCollaborator: [\n            \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n        ],\n        removeStatusCheckContexts: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        removeStatusCheckProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        removeTeamAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        removeUserAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n        replaceAllTopics: [\n            \"PUT /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n        setAdminBranchProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        setAppAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        setStatusCheckContexts: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        setTeamAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        setUserAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n        transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n        update: [\"PATCH /repos/{owner}/{repo}\"],\n        updateBranchProtection: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n        updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n        updateInvitation: [\n            \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        updatePullRequestReviewProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n        updateReleaseAsset: [\n            \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        updateStatusCheckPotection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n            {},\n            { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n        ],\n        updateStatusCheckProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        updateWebhookConfigForRepo: [\n            \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        uploadReleaseAsset: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n            { baseUrl: \"https://uploads.github.com\" },\n        ],\n    },\n    search: {\n        code: [\"GET /search/code\"],\n        commits: [\"GET /search/commits\"],\n        issuesAndPullRequests: [\"GET /search/issues\"],\n        labels: [\"GET /search/labels\"],\n        repos: [\"GET /search/repositories\"],\n        topics: [\"GET /search/topics\", { mediaType: { previews: [\"mercy\"] } }],\n        users: [\"GET /search/users\"],\n    },\n    secretScanning: {\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n    },\n    teams: {\n        addOrUpdateMembershipForUserInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        addOrUpdateProjectPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        addOrUpdateRepoPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        checkPermissionsForProjectInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        checkPermissionsForRepoInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        create: [\"POST /orgs/{org}/teams\"],\n        createDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n        deleteDiscussionCommentInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        deleteDiscussionInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n        getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n        getDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        getDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        getMembershipForUserInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        list: [\"GET /orgs/{org}/teams\"],\n        listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n        listDiscussionCommentsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n        listForAuthenticatedUser: [\"GET /user/teams\"],\n        listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n        listPendingInvitationsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n        ],\n        listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n        listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n        removeMembershipForUserInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        removeProjectInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        removeRepoInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        updateDiscussionCommentInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        updateDiscussionInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n    },\n    users: {\n        addEmailForAuthenticated: [\n            \"POST /user/emails\",\n            {},\n            { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] },\n        ],\n        addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n        block: [\"PUT /user/blocks/{username}\"],\n        checkBlocked: [\"GET /user/blocks/{username}\"],\n        checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n        checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n        createGpgKeyForAuthenticated: [\n            \"POST /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] },\n        ],\n        createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n        createPublicSshKeyForAuthenticated: [\n            \"POST /user/keys\",\n            {},\n            { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n        deleteEmailForAuthenticated: [\n            \"DELETE /user/emails\",\n            {},\n            { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] },\n        ],\n        deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n        deleteGpgKeyForAuthenticated: [\n            \"DELETE /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] },\n        ],\n        deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n        deletePublicSshKeyForAuthenticated: [\n            \"DELETE /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] },\n        ],\n        deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n        follow: [\"PUT /user/following/{username}\"],\n        getAuthenticated: [\"GET /user\"],\n        getByUsername: [\"GET /users/{username}\"],\n        getContextForUser: [\"GET /users/{username}/hovercard\"],\n        getGpgKeyForAuthenticated: [\n            \"GET /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] },\n        ],\n        getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n        getPublicSshKeyForAuthenticated: [\n            \"GET /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n        list: [\"GET /users\"],\n        listBlockedByAuthenticated: [\n            \"GET /user/blocks\",\n            {},\n            { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] },\n        ],\n        listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n        listEmailsForAuthenticated: [\n            \"GET /user/emails\",\n            {},\n            { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] },\n        ],\n        listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n        listFollowedByAuthenticated: [\n            \"GET /user/following\",\n            {},\n            { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] },\n        ],\n        listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n        listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n        listFollowersForUser: [\"GET /users/{username}/followers\"],\n        listFollowingForUser: [\"GET /users/{username}/following\"],\n        listGpgKeysForAuthenticated: [\n            \"GET /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] },\n        ],\n        listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n        listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n        listPublicEmailsForAuthenticated: [\n            \"GET /user/public_emails\",\n            {},\n            { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] },\n        ],\n        listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n        listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n        listPublicSshKeysForAuthenticated: [\n            \"GET /user/keys\",\n            {},\n            { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] },\n        ],\n        listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n        setPrimaryEmailVisibilityForAuthenticated: [\n            \"PATCH /user/email/visibility\",\n            {},\n            { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] },\n        ],\n        setPrimaryEmailVisibilityForAuthenticatedUser: [\n            \"PATCH /user/email/visibility\",\n        ],\n        unblock: [\"DELETE /user/blocks/{username}\"],\n        unfollow: [\"DELETE /user/following/{username}\"],\n        updateAuthenticated: [\"PATCH /user\"],\n    },\n};\nexport default Endpoints;\n","export const VERSION = \"5.13.0\";\n","export function endpointsToMethods(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n        for (const [methodName, endpoint] of Object.entries(endpoints)) {\n            const [route, defaults, decorations] = endpoint;\n            const [method, url] = route.split(/ /);\n            const endpointDefaults = Object.assign({ method, url }, defaults);\n            if (!newMethods[scope]) {\n                newMethods[scope] = {};\n            }\n            const scopeMethods = newMethods[scope];\n            if (decorations) {\n                scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n                continue;\n            }\n            scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n        }\n    }\n    return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    /* istanbul ignore next */\n    function withDecorations(...args) {\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        let options = requestWithDefaults.endpoint.merge(...args);\n        // There are currently no other decorations than `.mapToData`\n        if (decorations.mapToData) {\n            options = Object.assign({}, options, {\n                data: options[decorations.mapToData],\n                [decorations.mapToData]: undefined,\n            });\n            return requestWithDefaults(options);\n        }\n        if (decorations.renamed) {\n            const [newScope, newMethodName] = decorations.renamed;\n            octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n        }\n        if (decorations.deprecated) {\n            octokit.log.warn(decorations.deprecated);\n        }\n        if (decorations.renamedParameters) {\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n            const options = requestWithDefaults.endpoint.merge(...args);\n            for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n                if (name in options) {\n                    octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n                    if (!(alias in options)) {\n                        options[alias] = options[name];\n                    }\n                    delete options[name];\n                }\n            }\n            return requestWithDefaults(options);\n        }\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n}\n","import ENDPOINTS from \"./generated/endpoints\";\nimport { VERSION } from \"./version\";\nimport { endpointsToMethods } from \"./endpoints-to-methods\";\nexport function restEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        rest: api,\n    };\n}\nrestEndpointMethods.VERSION = VERSION;\nexport function legacyRestEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        ...api,\n        rest: api,\n    };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n"],"names":["Endpoints","actions","addSelectedRepoToOrgSecret","approveWorkflowRun","cancelWorkflowRun","createOrUpdateEnvironmentSecret","createOrUpdateOrgSecret","createOrUpdateRepoSecret","createRegistrationTokenForOrg","createRegistrationTokenForRepo","createRemoveTokenForOrg","createRemoveTokenForRepo","createWorkflowDispatch","deleteArtifact","deleteEnvironmentSecret","deleteOrgSecret","deleteRepoSecret","deleteSelfHostedRunnerFromOrg","deleteSelfHostedRunnerFromRepo","deleteWorkflowRun","deleteWorkflowRunLogs","disableSelectedRepositoryGithubActionsOrganization","disableWorkflow","downloadArtifact","downloadJobLogsForWorkflowRun","downloadWorkflowRunAttemptLogs","downloadWorkflowRunLogs","enableSelectedRepositoryGithubActionsOrganization","enableWorkflow","getAllowedActionsOrganization","getAllowedActionsRepository","getArtifact","getEnvironmentPublicKey","getEnvironmentSecret","getGithubActionsPermissionsOrganization","getGithubActionsPermissionsRepository","getJobForWorkflowRun","getOrgPublicKey","getOrgSecret","getPendingDeploymentsForRun","getRepoPermissions","renamed","getRepoPublicKey","getRepoSecret","getReviewsForRun","getSelfHostedRunnerForOrg","getSelfHostedRunnerForRepo","getWorkflow","getWorkflowRun","getWorkflowRunAttempt","getWorkflowRunUsage","getWorkflowUsage","listArtifactsForRepo","listEnvironmentSecrets","listJobsForWorkflowRun","listJobsForWorkflowRunAttempt","listOrgSecrets","listRepoSecrets","listRepoWorkflows","listRunnerApplicationsForOrg","listRunnerApplicationsForRepo","listSelectedReposForOrgSecret","listSelectedRepositoriesEnabledGithubActionsOrganization","listSelfHostedRunnersForOrg","listSelfHostedRunnersForRepo","listWorkflowRunArtifacts","listWorkflowRuns","listWorkflowRunsForRepo","removeSelectedRepoFromOrgSecret","reviewPendingDeploymentsForRun","setAllowedActionsOrganization","setAllowedActionsRepository","setGithubActionsPermissionsOrganization","setGithubActionsPermissionsRepository","setSelectedReposForOrgSecret","setSelectedRepositoriesEnabledGithubActionsOrganization","activity","checkRepoIsStarredByAuthenticatedUser","deleteRepoSubscription","deleteThreadSubscription","getFeeds","getRepoSubscription","getThread","getThreadSubscriptionForAuthenticatedUser","listEventsForAuthenticatedUser","listNotificationsForAuthenticatedUser","listOrgEventsForAuthenticatedUser","listPublicEvents","listPublicEventsForRepoNetwork","listPublicEventsForUser","listPublicOrgEvents","listReceivedEventsForUser","listReceivedPublicEventsForUser","listRepoEvents","listRepoNotificationsForAuthenticatedUser","listReposStarredByAuthenticatedUser","listReposStarredByUser","listReposWatchedByUser","listStargazersForRepo","listWatchedReposForAuthenticatedUser","listWatchersForRepo","markNotificationsAsRead","markRepoNotificationsAsRead","markThreadAsRead","setRepoSubscription","setThreadSubscription","starRepoForAuthenticatedUser","unstarRepoForAuthenticatedUser","apps","addRepoToInstallation","addRepoToInstallationForAuthenticatedUser","checkToken","createContentAttachment","mediaType","previews","createContentAttachmentForRepo","createFromManifest","createInstallationAccessToken","deleteAuthorization","deleteInstallation","deleteToken","getAuthenticated","getBySlug","getInstallation","getOrgInstallation","getRepoInstallation","getSubscriptionPlanForAccount","getSubscriptionPlanForAccountStubbed","getUserInstallation","getWebhookConfigForApp","getWebhookDelivery","listAccountsForPlan","listAccountsForPlanStubbed","listInstallationReposForAuthenticatedUser","listInstallations","listInstallationsForAuthenticatedUser","listPlans","listPlansStubbed","listReposAccessibleToInstallation","listSubscriptionsForAuthenticatedUser","listSubscriptionsForAuthenticatedUserStubbed","listWebhookDeliveries","redeliverWebhookDelivery","removeRepoFromInstallation","removeRepoFromInstallationForAuthenticatedUser","resetToken","revokeInstallationAccessToken","scopeToken","suspendInstallation","unsuspendInstallation","updateWebhookConfigForApp","billing","getGithubActionsBillingOrg","getGithubActionsBillingUser","getGithubPackagesBillingOrg","getGithubPackagesBillingUser","getSharedStorageBillingOrg","getSharedStorageBillingUser","checks","create","createSuite","get","getSuite","listAnnotations","listForRef","listForSuite","listSuitesForRef","rerequestRun","rerequestSuite","setSuitesPreferences","update","codeScanning","deleteAnalysis","getAlert","renamedParameters","alert_id","getAnalysis","getSarif","listAlertInstances","listAlertsForRepo","listAlertsInstances","listRecentAnalyses","updateAlert","uploadSarif","codesOfConduct","getAllCodesOfConduct","getConductCode","emojis","enterpriseAdmin","disableSelectedOrganizationGithubActionsEnterprise","enableSelectedOrganizationGithubActionsEnterprise","getAllowedActionsEnterprise","getGithubActionsPermissionsEnterprise","listSelectedOrganizationsEnabledGithubActionsEnterprise","setAllowedActionsEnterprise","setGithubActionsPermissionsEnterprise","setSelectedOrganizationsEnabledGithubActionsEnterprise","gists","checkIsStarred","createComment","delete","deleteComment","fork","getComment","getRevision","list","listComments","listCommits","listForUser","listForks","listPublic","listStarred","star","unstar","updateComment","git","createBlob","createCommit","createRef","createTag","createTree","deleteRef","getBlob","getCommit","getRef","getTag","getTree","listMatchingRefs","updateRef","gitignore","getAllTemplates","getTemplate","interactions","getRestrictionsForAuthenticatedUser","getRestrictionsForOrg","getRestrictionsForRepo","getRestrictionsForYourPublicRepos","removeRestrictionsForAuthenticatedUser","removeRestrictionsForOrg","removeRestrictionsForRepo","removeRestrictionsForYourPublicRepos","setRestrictionsForAuthenticatedUser","setRestrictionsForOrg","setRestrictionsForRepo","setRestrictionsForYourPublicRepos","issues","addAssignees","addLabels","checkUserCanBeAssigned","createLabel","createMilestone","deleteLabel","deleteMilestone","getEvent","getLabel","getMilestone","listAssignees","listCommentsForRepo","listEvents","listEventsForRepo","listEventsForTimeline","listForAuthenticatedUser","listForOrg","listForRepo","listLabelsForMilestone","listLabelsForRepo","listLabelsOnIssue","listMilestones","lock","removeAllLabels","removeAssignees","removeLabel","setLabels","unlock","updateLabel","updateMilestone","licenses","getAllCommonlyUsed","getForRepo","markdown","render","renderRaw","headers","meta","getOctocat","getZen","root","migrations","cancelImport","deleteArchiveForAuthenticatedUser","deleteArchiveForOrg","downloadArchiveForOrg","getArchiveForAuthenticatedUser","getCommitAuthors","getImportStatus","getLargeFiles","getStatusForAuthenticatedUser","getStatusForOrg","listReposForAuthenticatedUser","listReposForOrg","listReposForUser","mapCommitAuthor","setLfsPreference","startForAuthenticatedUser","startForOrg","startImport","unlockRepoForAuthenticatedUser","unlockRepoForOrg","updateImport","orgs","blockUser","cancelInvitation","checkBlockedUser","checkMembershipForUser","checkPublicMembershipForUser","convertMemberToOutsideCollaborator","createInvitation","createWebhook","deleteWebhook","getMembershipForAuthenticatedUser","getMembershipForUser","getWebhook","getWebhookConfigForOrg","listAppInstallations","listBlockedUsers","listFailedInvitations","listInvitationTeams","listMembers","listMembershipsForAuthenticatedUser","listOutsideCollaborators","listPendingInvitations","listPublicMembers","listWebhooks","pingWebhook","removeMember","removeMembershipForUser","removeOutsideCollaborator","removePublicMembershipForAuthenticatedUser","setMembershipForUser","setPublicMembershipForAuthenticatedUser","unblockUser","updateMembershipForAuthenticatedUser","updateWebhook","updateWebhookConfigForOrg","packages","deletePackageForAuthenticatedUser","deletePackageForOrg","deletePackageForUser","deletePackageVersionForAuthenticatedUser","deletePackageVersionForOrg","deletePackageVersionForUser","getAllPackageVersionsForAPackageOwnedByAnOrg","getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser","getAllPackageVersionsForPackageOwnedByAuthenticatedUser","getAllPackageVersionsForPackageOwnedByOrg","getAllPackageVersionsForPackageOwnedByUser","getPackageForAuthenticatedUser","getPackageForOrganization","getPackageForUser","getPackageVersionForAuthenticatedUser","getPackageVersionForOrganization","getPackageVersionForUser","listPackagesForAuthenticatedUser","listPackagesForOrganization","listPackagesForUser","restorePackageForAuthenticatedUser","restorePackageForOrg","restorePackageForUser","restorePackageVersionForAuthenticatedUser","restorePackageVersionForOrg","restorePackageVersionForUser","projects","addCollaborator","createCard","createColumn","createForAuthenticatedUser","createForOrg","createForRepo","deleteCard","deleteColumn","getCard","getColumn","getPermissionForUser","listCards","listCollaborators","listColumns","moveCard","moveColumn","removeCollaborator","updateCard","updateColumn","pulls","checkIfMerged","createReplyForReviewComment","createReview","createReviewComment","deletePendingReview","deleteReviewComment","dismissReview","getReview","getReviewComment","listCommentsForReview","listFiles","listRequestedReviewers","listReviewComments","listReviewCommentsForRepo","listReviews","merge","removeRequestedReviewers","requestReviewers","submitReview","updateBranch","updateReview","updateReviewComment","rateLimit","reactions","createForCommitComment","createForIssue","createForIssueComment","createForPullRequestReviewComment","createForRelease","createForTeamDiscussionCommentInOrg","createForTeamDiscussionInOrg","deleteForCommitComment","deleteForIssue","deleteForIssueComment","deleteForPullRequestComment","deleteForTeamDiscussion","deleteForTeamDiscussionComment","listForCommitComment","listForIssue","listForIssueComment","listForPullRequestReviewComment","listForTeamDiscussionCommentInOrg","listForTeamDiscussionInOrg","repos","acceptInvitation","acceptInvitationForAuthenticatedUser","addAppAccessRestrictions","mapToData","addStatusCheckContexts","addTeamAccessRestrictions","addUserAccessRestrictions","checkCollaborator","checkVulnerabilityAlerts","compareCommits","compareCommitsWithBasehead","createAutolink","createCommitComment","createCommitSignatureProtection","createCommitStatus","createDeployKey","createDeployment","createDeploymentStatus","createDispatchEvent","createFork","createInOrg","createOrUpdateEnvironment","createOrUpdateFileContents","createPagesSite","createRelease","createUsingTemplate","declineInvitation","declineInvitationForAuthenticatedUser","deleteAccessRestrictions","deleteAdminBranchProtection","deleteAnEnvironment","deleteAutolink","deleteBranchProtection","deleteCommitComment","deleteCommitSignatureProtection","deleteDeployKey","deleteDeployment","deleteFile","deleteInvitation","deletePagesSite","deletePullRequestReviewProtection","deleteRelease","deleteReleaseAsset","disableAutomatedSecurityFixes","disableLfsForRepo","disableVulnerabilityAlerts","downloadArchive","downloadTarballArchive","downloadZipballArchive","enableAutomatedSecurityFixes","enableLfsForRepo","enableVulnerabilityAlerts","generateReleaseNotes","getAccessRestrictions","getAdminBranchProtection","getAllEnvironments","getAllStatusCheckContexts","getAllTopics","getAppsWithAccessToProtectedBranch","getAutolink","getBranch","getBranchProtection","getClones","getCodeFrequencyStats","getCollaboratorPermissionLevel","getCombinedStatusForRef","getCommitActivityStats","getCommitComment","getCommitSignatureProtection","getCommunityProfileMetrics","getContent","getContributorsStats","getDeployKey","getDeployment","getDeploymentStatus","getEnvironment","getLatestPagesBuild","getLatestRelease","getPages","getPagesBuild","getPagesHealthCheck","getParticipationStats","getPullRequestReviewProtection","getPunchCardStats","getReadme","getReadmeInDirectory","getRelease","getReleaseAsset","getReleaseByTag","getStatusChecksProtection","getTeamsWithAccessToProtectedBranch","getTopPaths","getTopReferrers","getUsersWithAccessToProtectedBranch","getViews","getWebhookConfigForRepo","listAutolinks","listBranches","listBranchesForHeadCommit","listCommentsForCommit","listCommitCommentsForRepo","listCommitStatusesForRef","listContributors","listDeployKeys","listDeploymentStatuses","listDeployments","listInvitations","listInvitationsForAuthenticatedUser","listLanguages","listPagesBuilds","listPullRequestsAssociatedWithCommit","listReleaseAssets","listReleases","listTags","listTeams","mergeUpstream","removeAppAccessRestrictions","removeStatusCheckContexts","removeStatusCheckProtection","removeTeamAccessRestrictions","removeUserAccessRestrictions","renameBranch","replaceAllTopics","requestPagesBuild","setAdminBranchProtection","setAppAccessRestrictions","setStatusCheckContexts","setTeamAccessRestrictions","setUserAccessRestrictions","testPushWebhook","transfer","updateBranchProtection","updateCommitComment","updateInformationAboutPagesSite","updateInvitation","updatePullRequestReviewProtection","updateRelease","updateReleaseAsset","updateStatusCheckPotection","updateStatusCheckProtection","updateWebhookConfigForRepo","uploadReleaseAsset","baseUrl","search","code","commits","issuesAndPullRequests","labels","topics","users","secretScanning","listAlertsForOrg","teams","addOrUpdateMembershipForUserInOrg","addOrUpdateProjectPermissionsInOrg","addOrUpdateRepoPermissionsInOrg","checkPermissionsForProjectInOrg","checkPermissionsForRepoInOrg","createDiscussionCommentInOrg","createDiscussionInOrg","deleteDiscussionCommentInOrg","deleteDiscussionInOrg","deleteInOrg","getByName","getDiscussionCommentInOrg","getDiscussionInOrg","getMembershipForUserInOrg","listChildInOrg","listDiscussionCommentsInOrg","listDiscussionsInOrg","listMembersInOrg","listPendingInvitationsInOrg","listProjectsInOrg","listReposInOrg","removeMembershipForUserInOrg","removeProjectInOrg","removeRepoInOrg","updateDiscussionCommentInOrg","updateDiscussionInOrg","updateInOrg","addEmailForAuthenticated","addEmailForAuthenticatedUser","block","checkBlocked","checkFollowingForUser","checkPersonIsFollowedByAuthenticated","createGpgKeyForAuthenticated","createGpgKeyForAuthenticatedUser","createPublicSshKeyForAuthenticated","createPublicSshKeyForAuthenticatedUser","deleteEmailForAuthenticated","deleteEmailForAuthenticatedUser","deleteGpgKeyForAuthenticated","deleteGpgKeyForAuthenticatedUser","deletePublicSshKeyForAuthenticated","deletePublicSshKeyForAuthenticatedUser","follow","getByUsername","getContextForUser","getGpgKeyForAuthenticated","getGpgKeyForAuthenticatedUser","getPublicSshKeyForAuthenticated","getPublicSshKeyForAuthenticatedUser","listBlockedByAuthenticated","listBlockedByAuthenticatedUser","listEmailsForAuthenticated","listEmailsForAuthenticatedUser","listFollowedByAuthenticated","listFollowedByAuthenticatedUser","listFollowersForAuthenticatedUser","listFollowersForUser","listFollowingForUser","listGpgKeysForAuthenticated","listGpgKeysForAuthenticatedUser","listGpgKeysForUser","listPublicEmailsForAuthenticated","listPublicEmailsForAuthenticatedUser","listPublicKeysForUser","listPublicSshKeysForAuthenticated","listPublicSshKeysForAuthenticatedUser","setPrimaryEmailVisibilityForAuthenticated","setPrimaryEmailVisibilityForAuthenticatedUser","unblock","unfollow","updateAuthenticated","VERSION","endpointsToMethods","octokit","endpointsMap","newMethods","scope","endpoints","Object","entries","methodName","endpoint","route","defaults","decorations","method","url","split","endpointDefaults","assign","scopeMethods","decorate","request","requestWithDefaults","withDecorations","args","options","data","undefined","newScope","newMethodName","log","warn","deprecated","name","alias","restEndpointMethods","api","ENDPOINTS","rest","legacyRestEndpointMethods"],"mappings":"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"}