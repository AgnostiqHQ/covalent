# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

"""move executor_data to metadata

Revision ID: 21622225c1b1
Revises: 48edd77b14db
Create Date: 2023-03-27 07:06:38.897306

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
# pragma: allowlist nextline secret
revision = "21622225c1b1"
# pragma: allowlist nextline secret
down_revision = "48edd77b14db"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("electron_dependency", schema=None) as batch_op:
        batch_op.create_foreign_key("electron_link", "electrons", ["electron_id"], ["id"])

    with op.batch_alter_table("electrons", schema=None) as batch_op:
        batch_op.add_column(sa.Column("executor_data", sa.Text(), nullable=True))
        batch_op.drop_column("executor_data_filename")

    with op.batch_alter_table("lattices", schema=None) as batch_op:
        batch_op.add_column(sa.Column("executor_data", sa.Text(), nullable=True))
        batch_op.add_column(sa.Column("workflow_executor_data", sa.Text(), nullable=True))
        batch_op.drop_column("workflow_executor_data_filename")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("lattices", schema=None) as batch_op:
        batch_op.add_column(sa.Column("workflow_executor_data_filename", sa.TEXT(), nullable=True))
        batch_op.drop_column("workflow_executor_data")
        batch_op.drop_column("executor_data")

    with op.batch_alter_table("electrons", schema=None) as batch_op:
        batch_op.add_column(sa.Column("executor_data_filename", sa.TEXT(), nullable=True))
        batch_op.drop_column("executor_data")

    with op.batch_alter_table("electron_dependency", schema=None) as batch_op:
        batch_op.drop_constraint("electron_link", type_="foreignkey")

    # ### end Alembic commands ###
