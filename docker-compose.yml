# This file is used for pulling Covalent images from ECR using docker-compose
# Example usage: Run "docker-compose --env-file .env.compose up" from the root of the project
# to pull the images from ECR and start the containers.

version: "3.9"

services:
  covalent-data:
    build:
      context: '.'
      dockerfile: ./refactor/data/Dockerfile
    image: ${DATA_REPO}
    container_name: covalent-data
    ports:
      - 80:8004
    working_dir: /data
    networks:
     covalent:
    environment:
      DATA_SVC_HOST: 0.0.0.0
      DATA_SVC_PORT: 8004

  covalent-dispatcher:
    build:
      context: '.'
      dockerfile: ./refactor/dispatcher/Dockerfile
    image: ${DISPATCHER_REPO}
    ports:
      - 80:8002
    working_dir: /dispatcher
    networks:
     covalent:
    environment:
      RUNNER_SVC_PORT: 8003
      RUNNER_SVC_HOST: ${RUNNER_SVC_HOST}
      RESULTS_SVC_HOST: ${RESULTS_SVC_HOST}
      RESULTS_SVC_PORT: 8006
      DISPATCHER_SVC_HOST: 0.0.0.0
      DISPATCHER_SVC_PORT: 8002
      UI_SVC_HOST: ${UI_SVC_HOST}
      UI_SVC_PORT: 8004


  covalent-queuer:
    build:
      context: '.'
      dockerfile: ./refactor/queuer/Dockerfile
    image: "${QUEUER_REPO}"
    ports:
      - 80:8001
    working_dir: /queuer
    networks:
      covalent:
    environment:
      QUEUER_SVC_HOST: 0.0.0.0
      QUEUER_SVC_PORT: 8001

  # Queue-consumer uses the same Dockerfile configurations as the Queuer
  covalent-queue-consumer:
    build:
      context: '.'
      dockerfile: ./refactor/queuer/Dockerfile
    image: ${QUEUE_CONSUMER_REPO}
    ports:
      - 80:8001
    working_dir: /queuer
    networks:
      covalent:
    environment:
      QUEUER_SVC_HOST: 0.0.0.0
      QUEUER_SVC_PORT: 8001


  covalent-results:
    build:
      context: '.'
      dockerfile: ./refactor/results/Dockerfile
    image: ${RESULTS_REPO}
    ports:
      - 80:8006
    working_dir: /results
    networks:
     covalent:
    environment:
      RESULTS_SVC_HOST: 0.0.0.0
      RESULTS_SVC_PORT: 8006

  covalent-runner:
    build:
      context: '.'
      dockerfile: ./refactor/runner/Dockerfile
    image: ${RUNNER_REPO}
    ports:
      - 80:8003
    working_dir: /runner
    networks:
      covalent:
    environment:
      RUNNER_SVC_HOST: 0.0.0.0
      RUNNER_SVC_PORT: 8003

  covalent-ui:
    build:
      context: '.'
      dockerfile: ./refactor/ui_backend/Dockerfile
    image: ${UI_REPO}
    ports:
      - 80:8004
    environment:
      UI_SVC_HOST: 0.0.0.0
      UI_SVC_PORT: 8004
    working_dir: /ui_backend
    networks:
      covalent:

  covalent-nats:
    image: nats
    ports:
      - "4222:4222"
    networks:
      covalent:

networks:
  covalent:
