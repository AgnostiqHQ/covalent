# Copyright 2021 Agnostiq Inc.
#
# This file is part of Covalent.
#
# Licensed under the GNU Affero General Public License 3.0 (the "License").
# A copy of the License may be obtained with this software package or at
#
#      https://www.gnu.org/licenses/agpl-3.0.en.html
#
# Use of this file is prohibited except in compliance with the License. Any
# modifications or derivative works of this file must retain this copyright
# notice, and modified files must contain a notice indicating that they have
# been altered from the originals.
#
# Covalent is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the License for more details.
#
# Relief from the License may be granted by purchasing a commercial license.

"""Electrons Schema """
import enum

from sqlalchemy import BigInteger, Column, DateTime, Enum, ForeignKey, Integer, String, Text

from covalent_ui.app.api_v0.database.config.db import Base


class ElectronTypeEnum(enum.Enum):
    """Electron Type Of Enum

    Attributes:
        electron
        parameter
        sublattice
        collection
        attribute
        generated
        subscript
    """

    ELECTRON = 1
    PARAMETER = 2
    SUBLATTICE = 3
    COLLECTION = 4
    ATTRIBUTE = 5
    GENERATED = 6
    SUBSCRIPT = 7


class Electron(Base):
    """Electron

    Attributes:
        id: primary key id
        parent_lattice_id: id of the lattice containing this electron
        transport_graph_node_id: id of the node in the context of a transport graph
        type: node type
        name: node name
        status: Execution status of the node
        storage_type: Storage backend type for data files ("local", "s3")
        storage_path: Bucket name (dispatch_id)
        function_filename: Name of the file containing the serialized function
        function_string_filename: Name of the file containing the function string
        executor_filename: Name of the file containing the serialized executor
        error_filename: Name of the file containing an error message for the electron
        results_filename: Name of the file containing the serialized output
        value_filename: Name of the file containing the serialized parameter (for parameter nodes)
        attribute_name: Electron attribute name (for attribute nodes)
        key: For generated and subscript nodes
        stdout_filename: Name of the file containing standard output generated by the task
        stderr_filename: Name of the file containing standard error generated by the task
        info_filename: Name of the file containing execution information generated at runtime
        created_at: created timestamp
        updated_at: updated timestamp
        started_at: started timestamp
        completed_at: completed timestamp
    """

    __tablename__ = "electrons"
    id = Column(BigInteger, primary_key=True)

    parent_lattice_id = Column(BigInteger, ForeignKey("lattices.id"), nullable=False)

    transport_graph_node_id = Column(Integer, nullable=False)

    type = Column(Enum(ElectronTypeEnum), nullable=False)

    name = Column(Text, nullable=False)

    status = Column(String(24), nullable=False)

    storage_type = Column(Text)

    storage_path = Column(Text)

    function_filename = Column(Text)

    function_string_filename = Column(Text)

    executor_filename = Column(Text)

    error_filename = Column(Text)

    results_filename = Column(Text)

    value_filename = Column(Text)

    attribute_name = Column(Text)

    key = Column(Integer)

    stdout_filename = Column(Text)

    stderr_filename = Column(Text)

    info_filename = Column(Text)

    created_at = Column(DateTime, nullable=False)
    updated_at = Column(DateTime, nullable=False)
    started_at = Column(DateTime)
    completed_at = Column(DateTime)
