[group:covalent]
programs=queuer,dispatcher,runner,data,ui_backend,results,dispatcher_mq_consumer

[program:queuer]
directory={{ project_root }}/refactor/queuer
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/queuer/err.log
stdout_logfile={{ project_root }}/refactor/queuer/out.log
numprocs=1

[program:dispatcher]
directory={{ project_root }}/refactor/dispatcher
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/dispatcher/err.log
stdout_logfile={{ project_root }}/refactor/dispatcher/out.log
numprocs=1

[program:dispatcher_mq_consumer]
directory={{ project_root }}/refactor/dispatcher/
command=python queue_consumer.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/dispatcher/consumer_err.log
stdout_logfile={{ project_root }}/refactor/dispatcher/consumer_out.log
numprocs=1

[program:runner]
directory={{ project_root }}/refactor/runner
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/runner/err.log
stdout_logfile={{ project_root }}/refactor/runner/out.log
numprocs=1

[program:data]
directory={{ project_root }}/refactor/data
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/data/err.log
stdout_logfile={{ project_root }}/refactor/data/out.log
numprocs=1

[program:results]
directory={{ project_root }}/refactor/results
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/results/err.log
stdout_logfile={{ project_root }}/refactor/results/out.log
numprocs=1

[program:ui_backend]
directory={{ project_root }}/refactor/ui_backend
command=python main.py
autostart=true
autorestart=true
stderr_logfile={{ project_root }}/refactor/ui_backend/err.log
stdout_logfile={{ project_root }}/refactor/ui_backend/out.log
numprocs=1

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile={{ sd_pid_file_path }} ; supervisord pidfile; default supervisord.pid
nodaemon=true               ; start in foreground if true; default false
silent=false                 ; no logs to stdout if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[inet_http_server]         ; inet (TCP) server disabled by default
port=*:{{ sd_dashboard_port }}        ; ip_address:port specifier, *:port for all iface


[supervisorctl]
sserverurl=http://127.0.0.1:{{ sd_dashboard_port }} ; use an http:// url to specify an inet socket
